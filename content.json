{"meta":{"title":"Yuweiwei","subtitle":"","description":"","author":"Yuweiwei","url":"https://yuweiwei.net","root":"/"},"pages":[{"title":"tags","date":"2020-09-26T08:42:55.000Z","updated":"2020-09-26T14:10:02.690Z","comments":true,"path":"tags/index.html","permalink":"https://yuweiwei.net/tags/index.html","excerpt":"","text":""},{"title":"categories","date":"2020-09-26T08:42:49.000Z","updated":"2020-09-26T14:09:02.495Z","comments":true,"path":"categories/index.html","permalink":"https://yuweiwei.net/categories/index.html","excerpt":"","text":""},{"title":"","date":"2020-09-26T05:52:28.211Z","updated":"2020-09-25T21:51:38.000Z","comments":true,"path":"kitty-avatars/license/license.html","permalink":"https://yuweiwei.net/kitty-avatars/license/license.html","excerpt":"","text":"User License"}],"posts":[{"title":"經典設計模式 with PHP","slug":"design-pattern/00","date":"2020-09-26T07:24:56.000Z","updated":"2020-09-26T16:23:10.478Z","comments":true,"path":"2020/09/26/design-pattern/00/","link":"","permalink":"https://yuweiwei.net/2020/09/26/design-pattern/00/","excerpt":"","text":"什麼是設計模式？在軟體工程中，設計模式是對軟體設計中普遍存在的各種問題，所提出的解決方案。 設計模式並不直接用來完成程式碼的編寫，而是描述在各種不同情況下，要怎麼解決問題的一種方案。 設計模式的三大類型創建型 ( Creational Pattern ) 單例模式 ( Singleton Pattern ) 工廠方法模式 ( Factory Method Pattern ) 抽象工廠模式 ( Abstract Factory Pattern ) 建造者模式 ( Builder Pattern ) 原型模式 ( Prototype Pattern ) 結構型 ( Structural Patterns ) 轉接器模式 ( Adapter Pattern ) 組合模式 ( Composite Pattern ) 代理模式 ( Proxy Pattern ) 橋接模式 ( Bridge Pattern ) 裝飾模式 ( Decorator Pattern ) 門面模式 ( Facade Pattern ) 享元模式 ( Flyweight Pattern ) 行為型 ( Behavioral Pattern ) 迭代器模式 ( Iterator Pattern ) 命令模式 ( Command Pattern ) 解釋器模式 ( Interpreter Pattern ) 責任鏈模式 ( Chain of Responsibility ) 觀察者模式 ( Observer Pattern ) 中介者模式 ( Mediator Pattern ) 備忘錄模式 ( Memento Pattern ) 狀態模式 ( State Pattern ) 策略模式 ( Strategy Pattern ) 模板方法模式 ( Template Method Pattern ) 訪問者模式 ( Visitor Pattern )","categories":[{"name":"經典設計模式 with PHP","slug":"經典設計模式-with-PHP","permalink":"https://yuweiwei.net/categories/%E7%B6%93%E5%85%B8%E8%A8%AD%E8%A8%88%E6%A8%A1%E5%BC%8F-with-PHP/"}],"tags":[{"name":"設計模式","slug":"設計模式","permalink":"https://yuweiwei.net/tags/%E8%A8%AD%E8%A8%88%E6%A8%A1%E5%BC%8F/"},{"name":"PHP","slug":"PHP","permalink":"https://yuweiwei.net/tags/PHP/"}]},{"title":"Hello World","slug":"hello-world","date":"2020-09-26T04:55:07.427Z","updated":"2020-09-26T16:30:12.134Z","comments":true,"path":"2020/09/26/hello-world/","link":"","permalink":"https://yuweiwei.net/2020/09/26/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[{"name":"教學","slug":"教學","permalink":"https://yuweiwei.net/tags/%E6%95%99%E5%AD%B8/"}]}],"categories":[{"name":"經典設計模式 with PHP","slug":"經典設計模式-with-PHP","permalink":"https://yuweiwei.net/categories/%E7%B6%93%E5%85%B8%E8%A8%AD%E8%A8%88%E6%A8%A1%E5%BC%8F-with-PHP/"}],"tags":[{"name":"設計模式","slug":"設計模式","permalink":"https://yuweiwei.net/tags/%E8%A8%AD%E8%A8%88%E6%A8%A1%E5%BC%8F/"},{"name":"PHP","slug":"PHP","permalink":"https://yuweiwei.net/tags/PHP/"},{"name":"教學","slug":"教學","permalink":"https://yuweiwei.net/tags/%E6%95%99%E5%AD%B8/"}]}